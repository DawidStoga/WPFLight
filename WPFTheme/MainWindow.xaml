<Window x:Class="WPFTheme.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFTheme"
        xmlns:pl="clr-namespace:WPFTheme"
        mc:Ignorable="d"
        Title="MainWindow" Height="295.066" Width="525"
        Loaded="Window_Loaded"
        >
    <Window.CommandBindings>
        <CommandBinding Command="pl:DataCommands.Requery" Executed="CommandBinding_Executed_1"/>
        <CommandBinding Command="ApplicationCommands.New" Executed="CommandBinding_Executed" />
        <CommandBinding Command="ApplicationCommands.Open" Executed="CommandBinding_Executed_2"/>
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDict.xaml"/>
                <ResourceDictionary>
                    
               
        
        <pl:MyIntConverter x:Key="AlternationConverter"/>
        <pl:PlaneDP x:Key="plane" Altitude="{Binding Path=Value, Converter={StaticResource AlternationConverter}, Source={x:Reference slider}}"/>
        <pl:SampleDP x:Key="MNB" />
        <RadialGradientBrush x:Key="myBrush">
            <GradientStop Color="#FF1EADC4" Offset="0" />
            <GradientStop Color="#FFD5DBEE" Offset="1" />
            <GradientStop Color="#FFC4F9B9" Offset="0.669" />
        </RadialGradientBrush> 
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <TabControl>
        <TabItem Header="DependencyProperty">
            <Grid Margin="0,0,0,3" DataContext="{Binding ElementName=slider}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="238*"/>
                    <ColumnDefinition Width="44*" />
                    <ColumnDefinition Width="75*"/>
                    <ColumnDefinition Width="160*"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="22*"/>
                    <RowDefinition Height="24*"/>
                    <RowDefinition Height="23*"/>
                    <RowDefinition Height="24*"/>
                    <RowDefinition Height="23*"/>
                </Grid.RowDefinitions>
                <Label Content="Description"/>
                <Label Content="Value" Grid.Column="1"/>
                <Label Content="Remarks" Grid.Column="2"/>

                <Slider x:Name="slider" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="29"  Orientation="Horizontal" Minimum="5" Grid.Row="1" Grid.Column="3" Width="107" RenderTransformOrigin="0,0" Maximum="20" Grid.RowSpan="2"/>
                <!--, Converter={StaticResource AlternationConverter}-->
                <pl:PlaneDP  Command="New" x:Name="xmlPlane"  Altitude="{Binding  Path=Value, ElementName=slider}" Exceed="xmlPlane_Exceed"/>
                <Label  FontSize="{Binding Path=Value}"    Grid.Column="0" Grid.Row="1" Content="Binding Slider To UIElement" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="auto" Width="auto" Grid.RowSpan="2"/>
                <Label   x:Name="SliderToElement" Grid.Column="1" Grid.Row="1" Content="{Binding Value, ElementName=slider}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="26" Grid.RowSpan="2"/>

                <Label  FontSize="{Binding Path=Value}"    Grid.Column="0" Grid.Row="2" Content="Binding Slider To UIElement with IValueConverter" HorizontalAlignment="Left" Width="auto" Grid.RowSpan="2" Margin="0,0,0,15"/>
                <Label   x:Name="SliderToElementCon" Grid.Column="1" Grid.Row="2" Content="{Binding Value, ElementName=slider, Converter={StaticResource AlternationConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="26" Grid.RowSpan="2"/>

                <Label FontSize="{Binding Path=Value}" Grid.Column="0" Grid.Row="3" Content="Binding OwnDPObj to UIElement (Created in DataGrid)" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="32" Width="auto" Grid.RowSpan="2"/>
                <Label Grid.Column="1" Grid.Row="3" Content="{Binding ElementName=xmlPlane, Path=Altitude }" HorizontalAlignment="Left" Height="26"  VerticalAlignment="Top" Width="auto"  />

                <Label FontSize="{Binding Path=Value}" Grid.Column="0" Grid.Row="4" Content="Binding OwnDPObj to UIElement (Created in Resources)" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="32" Width="auto" Grid.RowSpan="2"/>
                <Label Content="{Binding Path=Altitude, Source={StaticResource plane}}" HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="42" Grid.Row="4" Grid.Column="1"/>

                <Label FontSize="{Binding Path=Value}" Grid.Column="0" Grid.Row="5" Content="Binding OwnDPObj to UIElement (Created in Resources)" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="32" Width="auto" Grid.RowSpan="2"/>
                <Label x:Name="BindLabel" HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="42" Grid.Row="5" Grid.Column="1" />




                <Button  Grid.Column="3" Grid.Row="3" Content="Read From Resource" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="92" Click="Button_Click" Height="24" FontSize="9"/>
                <Button Content="Set DP" Grid.Column="3" HorizontalAlignment="Left" Margin="0,2,0,0" Grid.Row="4" VerticalAlignment="Top" Width="46" Click="Button_Click_1"/>
                <Button Content="Clear DP" Grid.Column="3" HorizontalAlignment="Left" Margin="51,2,0,0" Grid.Row="4" VerticalAlignment="Top" Width="46" Click="Button_Click_2"/>

            </Grid>
        </TabItem>
        <TabItem Header="RoutedEvents">
            <Button Name="btnClickMe" Height="75" Width = "250"
Click ="btnClickMe_Clicked">
                <StackPanel Orientation ="Horizontal">
                    <Label Height="50" FontSize ="20">Fancy Button!</Label>
                    <Canvas Height ="50" Width ="100" >
                        <Ellipse Name = "outerEllipse" Fill ="Green" Height ="25"
Width ="50" Cursor="Hand" Canvas.Left="25" Canvas.Top="12"  PreviewMouseDown="outerEllipse_PreviewMouseDown" Mouse.MouseDown="outerEllipse_MouseDown">

                        </Ellipse>
                        <Ellipse Name = "innerEllipse" Fill ="Yellow" Height = "15" Width ="36"
Canvas.Top="17" Canvas.Left="32"/>
                    </Canvas>
                </StackPanel>
            </Button>
        </TabItem>
        <TabItem Header="Commands" >
            <DockPanel Margin="0,4,0,-4" FocusManager.IsFocusScope="True">
                <Menu DockPanel.Dock ="Top" HorizontalAlignment="Left" Background="White" BorderBrush ="Black">
                    <MenuItem Header="_Edit">
                        <MenuItem Command="ApplicationCommands.New"/>
                        <MenuItem Command="ApplicationCommands.Copy"/>
                        <MenuItem Command ="ApplicationCommands.Cut"/>
                        <MenuItem Command ="ApplicationCommands.Paste"/>
                    </MenuItem>
                    <MenuItem  Command="ApplicationCommands.New" Header="ShowMessage"/>
                </Menu>
                <TextBox Name="textBox" Height="48" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="185" Margin="0,33,0,0"/>
                <Button  Command="ApplicationCommands.New" Content="{Binding RelativeSource={RelativeSource Self},  Path=Command.Text}" Height="28" VerticalAlignment="Top" Width="106" >
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleY="-0.496"/>
                            <RotateTransform/>
                            <TranslateTransform Y="-0.325"/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <StackPanel FocusManager.IsFocusScope="True">
                    <Button  Command="ApplicationCommands.New"  Content="{Binding Command.Text, RelativeSource={RelativeSource Self}}" Height="28" VerticalAlignment="Top" Width="106" />
                    <Button Command="pl:DataCommands.Requery"  ToolTip="Right +Ctrl"  Content= "{Binding Command.Text, RelativeSource={RelativeSource Self}}" Height="28" VerticalAlignment="Top" Width="106" />

                </StackPanel>


                <TextBox x:Name="textBox2" Height="48" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="185" Margin="0,33,0,0"/>
            </DockPanel>

        </TabItem>
        <TabItem Header="Read from XML">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="30"/>

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>

                </Grid.ColumnDefinitions>



                <Button  Grid.Row="1"  Command ="Open" Content="Button" Height="26" />
                <TextBox  Background="Azure" Grid.Column="0" x:Name="XMLLoader" Height="194"  Width="120" TextWrapping="Wrap"  Margin="22,6,27,3"/>
                <TextBox Grid.Column="1" x:Name="XMLLoader_Copy" Height="194"   TextWrapping="Wrap" Text="TextBox" Margin="28,0,321,0"/>
                <DataGrid x:Name="xmlGrid"   Grid.Column="2" HorizontalAlignment="Left" Height="183" Margin="10,10,0,0" VerticalAlignment="Top" Width="149"/>

            </Grid>


        </TabItem>
        <TabItem Header="Read from EF">
        </TabItem>
        <TabItem Header="Animation">
         <Button Width="507" x:Name="animBtn" MouseEnter="Button_MouseEnter"/>   
        </TabItem>
        <TabItem Header="Resources">
            <DockPanel LastChildFill="True">
                <ToolBar Height="60" Name="picturePickerToolbar" DockPanel.Dock="Top">
                    <Button Background="{StaticResource myBrush}" x:Name="btnPreviousImage" Height="40" Width="100" BorderBrush="Black"
Margin="5" Content="Previous" Click="btnPreviousImage_Click"/>
                    <Button Background="{DynamicResource myBrush}" x:Name="btnNextImage" Height="40" Width="100" BorderBrush="Black"
Margin="5" Content="Next" Click="btnNextImage_Click"/>
                    <Button Background="{DynamicResource myBrush2}" x:Name="ChangeResource" Height="40" Width="156" BorderBrush="Black"
                        Margin="0,10,0,5" Content="Change DynamicResource" Click="ChangeResource_Click">

                    </Button>
                </ToolBar>
                <!-- We will fill this Image in code. -->
                <Border BorderThickness="2" BorderBrush="Green">
                    <Image x:Name="imageHolder" Stretch="Fill" />
                </Border>
            </DockPanel>

        </TabItem>



    </TabControl>
</Window>
